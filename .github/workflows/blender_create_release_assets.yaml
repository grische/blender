name: Create Blender Release Assets

on:
  # push:
  #   tags:
  #     - 'v[0-9]+.[0-9]+.[0-9]+-[a-f0-9]+'
  # Pushing tags for older commits does not seem to trigger, using dispatch as an alternative
  workflow_dispatch:
    inputs:
      tag:
        description: "Name of the tag"
        required: true

jobs:
  create_release:
    name: Create Release ${{ github.event.inputs.tag }}
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Checkout Blender
        uses: actions/checkout@v2
        with:
          path: blender.git
          fetch-depth: 1
          submodules: false
          ref: "automatic_sync"

      - name: Verify Blender ${{ github.event.inputs.tag }} download still exists
        run: bash ./blender.git/build_files/utils/fetch_builder_artifacts_names.sh ${{ github.event.inputs.tag }} "" ${{ github.workspace }}/build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag  }}
          release_name: Blender ${{ github.event.inputs.tag }}
          draft: false
          prerelease: true

  upload_release_assets:
    name: Upload Blender Artifacts
    runs-on: ubuntu-latest
    needs: [create_release]
    strategy:
      fail-fast: false
      matrix:
        os: ["windows", "macos-arm", "macos.[^a]", "linux"]
    steps:
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Checkout Blender
        uses: actions/checkout@v2
        with:
          path: blender.git
          fetch-depth: 1
          submodules: false
          ref: "automatic_sync"

      - name: Download Blender ${{ github.event.inputs.tag }} for ${{ matrix.os }}
        run: |
          download="$(mktemp -d)"
          bash ./blender.git/build_files/utils/fetch_builder_artifacts.sh ${{ github.event.inputs.tag }} ${{ matrix.os }} "${download}"
          export BLENDER_FILEPATH_LOCAL=$(ls -1 "${download}"/* | head -n 1) && echo ${BLENDER_FILEPATH_LOCAL}
          echo "BLENDER_FILEPATH=${BLENDER_FILEPATH_LOCAL}" >> $GITHUB_ENV
          echo "BLENDER_FILENAME=$(basename "${BLENDER_FILEPATH_LOCAL}")" >> $GITHUB_ENV
          echo "MIME_TYPE=$(file --mime-type -b "${BLENDER_FILEPATH_LOCAL}")" >> $GITHUB_ENV

      - name: Upload ${{matrix.os}} Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.BLENDER_FILEPATH }}
          asset_name: ${{ env.BLENDER_FILENAME }}
          asset_content_type: ${{ env.MIME_TYPE }}

  # generate checksum for blender downloads
  upload_release_checksum:
    name: Upload Artifact Checksum
    runs-on: ubuntu-latest
    needs: [create_release]
    env:
      CHECKSUM_FILENAME: blender-${{ github.event.inputs.tag }}.md5
    steps:
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Checkout Blender
        uses: actions/checkout@v2
        with:
          path: blender.git
          fetch-depth: 1
          submodules: false
          ref: "automatic_sync"

      - name: Generate Checksums for Blender ${{ github.event.inputs.tag }}
        run: |
          download="$(mktemp -d)"
          bash ./blender.git/build_files/utils/fetch_builder_artifacts.sh ${{ github.event.inputs.tag }} "" "${download}"
          cd ${download}
          md5sum * > ${{ github.workspace }}/${{ env.CHECKSUM_FILENAME }}

      - name: Upload Checksum Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.CHECKSUM_FILENAME }}
          asset_name: ${{ env.CHECKSUM_FILENAME }}
          asset_content_type: "text/plain"
